default xkb_symbols "test" {

    name[group1]="English (US)";

    key  <Esc> {         [          Escape ] };
    key <1> {         [               1,          exclam ] };
    key <2> {         [               2,              at ] };
    key <3> {         [               3,      numbersign ] };
    key <4> {         [               4,          dollar ] };
    key <5> {         [               5,         percent ] };
    key <6> {         [               6,     asciicircum ] };
    key <7> {         [               7,       ampersand ] };
    key <8> {         [               8,        asterisk ] };
    key <9> {         [               9,       parenleft ] };
    key <0> {         [               0,      parenright ] };
    key <-> {         [           minus,      underscore ] };
    key <=> {         [           equal,            plus ] };
    key <Bksp> {         [       BackSpace,       BackSpace ] };
    key  <Tab> {         [             Tab,    ISO_Left_Tab ] };
    key <q> {
        type= "ALPHABETIC",
        symbols[Group1]= [               q,               Q ]
    };
    key <w> {
        type= "ALPHABETIC",
        symbols[Group1]= [               w,               W ]
    };
    key <e> {
        type= "ALPHABETIC",
        symbols[Group1]= [               e,               E ]
    };
    key <r> {
        type= "ALPHABETIC",
        symbols[Group1]= [               r,               R ]
    };
    key <t> {
        type= "ALPHABETIC",
        symbols[Group1]= [               t,               T ]
    };
    key <y> {
        type= "ALPHABETIC",
        symbols[Group1]= [               y,               Y ]
    };
    key <u> {
        type= "ALPHABETIC",
        symbols[Group1]= [               u,               U ]
    };
    key <i> {
        type= "ALPHABETIC",
        symbols[Group1]= [               i,               I ]
    };
    key <o> {
        type= "ALPHABETIC",
        symbols[Group1]= [               o,               O ]
    };
    key <p> {
        type= "ALPHABETIC",
        symbols[Group1]= [               p,               P ]
    };
    key <[> {         [     bracketleft,       braceleft ] };
    key <]> {         [    bracketright,      braceright ] };
    key <Entr> {         [          Return ] };
    key <LCtl> {         [       Control_L ] };
    key <a> {
        type= "ALPHABETIC",
        symbols[Group1]= [               a,               A ]
    };
    key <s> {
        type= "ALPHABETIC",
        symbols[Group1]= [               s,               S ]
    };
    key <d> {
        type= "ALPHABETIC",
        symbols[Group1]= [               d,               D ]
    };
    key <f> {
        type= "ALPHABETIC",
        symbols[Group1]= [               f,               F ]
    };
    key <g> {
        type= "ALPHABETIC",
        symbols[Group1]= [               g,               G ]
    };
    key <h> {
        type= "ALPHABETIC",
        symbols[Group1]= [               h,               H ]
    };
    key <j> {
        type= "ALPHABETIC",
        symbols[Group1]= [               j,               J ]
    };
    key <k> {
        type= "ALPHABETIC",
        symbols[Group1]= [               k,               K ]
    };
    key <l> {
        type= "ALPHABETIC",
        symbols[Group1]= [               l,               L ]
    };
    key <;> {         [       semicolon,           colon ] };
    key <'> {         [      apostrophe,        quotedbl ] };
    key <`> {         [           grave,      asciitilde ] };
    key <LSft> {         [         Shift_L ] };
    key <\\> {         [       backslash,             bar ] };
    key <z> {
        type= "ALPHABETIC",
        symbols[Group1]= [               z,               Z ]
    };
    key <x> {
        type= "ALPHABETIC",
        symbols[Group1]= [               x,               X ]
    };
    key <c> {
        type= "ALPHABETIC",
        symbols[Group1]= [               c,               C ]
    };
    key <v> {
        type= "ALPHABETIC",
        symbols[Group1]= [               v,               V ]
    };
    key <b> {
        type= "ALPHABETIC",
        symbols[Group1]= [               b,               B ]
    };
    key <n> {
        type= "ALPHABETIC",
        symbols[Group1]= [               n,               N ]
    };
    key <m> {
        type= "ALPHABETIC",
        symbols[Group1]= [               m,               M ]
    };
    key <,> {         [           comma,            less ] };
    key <.> {         [          period,         greater ] };
    key </> {         [           slash,        question ] };
    key <RSft> {         [         Shift_R ] };
    key <KP*> {
        type= "CTRL+ALT",
        symbols[Group1]= [     KP_Multiply,     KP_Multiply,     KP_Multiply,     KP_Multiply,   XF86ClearGrab ]
    };
    key <LAlt> {         [           Alt_L,          Meta_L ] };
    key <Spce> {         [           space ] };
    key <Caps> {         [       Caps_Lock ] };
    key <F1> {
        type= "CTRL+ALT",
        symbols[Group1]= [              F1,              F1,              F1,              F1, XF86Switch_VT_1 ]
    };
    key <F2> {
        type= "CTRL+ALT",
        symbols[Group1]= [              F2,              F2,              F2,              F2, XF86Switch_VT_2 ]
    };
    key <F3> {
        type= "CTRL+ALT",
        symbols[Group1]= [              F3,              F3,              F3,              F3, XF86Switch_VT_3 ]
    };
    key <F4> {
        type= "CTRL+ALT",
        symbols[Group1]= [              F4,              F4,              F4,              F4, XF86Switch_VT_4 ]
    };
    key <F5> {
        type= "CTRL+ALT",
        symbols[Group1]= [              F5,              F5,              F5,              F5, XF86Switch_VT_5 ]
    };
    key <F6> {
        type= "CTRL+ALT",
        symbols[Group1]= [              F6,              F6,              F6,              F6, XF86Switch_VT_6 ]
    };
    key <F7> {
        type= "CTRL+ALT",
        symbols[Group1]= [              F7,              F7,              F7,              F7, XF86Switch_VT_7 ]
    };
    key <F8> {
        type= "CTRL+ALT",
        symbols[Group1]= [              F8,              F8,              F8,              F8, XF86Switch_VT_8 ]
    };
    key <F9> {
        type= "CTRL+ALT",
        symbols[Group1]= [              F9,              F9,              F9,              F9, XF86Switch_VT_9 ]
    };
    key <F10> {
        type= "CTRL+ALT",
        symbols[Group1]= [             F10,             F10,             F10,             F10, XF86Switch_VT_10 ]
    };
    key <NmLk> {         [        Num_Lock ] };
    key <ScLk> {         [     Scroll_Lock ] };
    key  <KP7> {         [         KP_Home,            KP_7 ] };
    key  <KP8> {         [           KP_Up,            KP_8 ] };
    key  <KP9> {         [        KP_Prior,            KP_9 ] };
    key <KP-> {
        type= "CTRL+ALT",
        symbols[Group1]= [     KP_Subtract,     KP_Subtract,     KP_Subtract,     KP_Subtract,  XF86Prev_VMode ]
    };
    key  <KP4> {         [         KP_Left,            KP_4 ] };
    key  <KP5> {         [        KP_Begin,            KP_5 ] };
    key  <KP6> {         [        KP_Right,            KP_6 ] };
    key <KP+> {
        type= "CTRL+ALT",
        symbols[Group1]= [          KP_Add,          KP_Add,          KP_Add,          KP_Add,  XF86Next_VMode ]
    };
    key  <KP1> {         [          KP_End,            KP_1 ] };
    key  <KP2> {         [         KP_Down,            KP_2 ] };
    key  <KP3> {         [         KP_Next,            KP_3 ] };
    key  <KP0> {         [       KP_Insert,            KP_0 ] };
    key <KP.> {         [       KP_Delete,      KP_Decimal ] };
//    key <LVL3> {         [ ISO_Level3_Shift ] };
    key <|> {
        type= "FOUR_LEVEL",
        symbols[Group1]= [            less,         greater,             bar,       brokenbar ]
    };
    key <F11> {
        type= "CTRL+ALT",
        symbols[Group1]= [             F11,             F11,             F11,             F11, XF86Switch_VT_11 ]
    };
    key <F12> {
        type= "CTRL+ALT",
        symbols[Group1]= [             F12,             F12,             F12,             F12, XF86Switch_VT_12 ]
    };
//    key <KATA> {         [        Katakana ] };
//    key <HIRA> {         [        Hiragana ] };
//    key <HENK> {         [     Henkan_Mode ] };
//    key <HKTG> {         [ Hiragana_Katakana ] };
//    key <MUHE> {         [        Muhenkan ] };
    key <KPEn> {         [        KP_Enter ] };
    key <RCtl> {         [       Control_R ] };
    key <KP/> {
        type= "CTRL+ALT",
        symbols[Group1]= [       KP_Divide,       KP_Divide,       KP_Divide,       KP_Divide,      XF86Ungrab ]
    };
    key <PrSc> {
        type= "PC_ALT_LEVEL2",
        symbols[Group1]= [           Print,         Sys_Req ]
    };
    key <RAlt> {
        type= "TWO_LEVEL",
        symbols[Group1]= [           Alt_R,          Meta_R ]
    };
//    key <LNFD> {         [        Linefeed ] };
    key <Home> {         [            Home ] };
    key   <Up> {         [              Up ] };
    key <PgUp> {         [           Prior ] };
    key <Left> {         [            Left ] };
    key <Rght> {         [           Right ] };
    key  <End> {         [             End ] };
    key <Down> {         [            Down ] };
    key <PgDn> {         [            Next ] };
    key  <Ins> {         [          Insert ] };
    key <Del> {         [          Delete ] };
    key <Mute> {         [   XF86AudioMute ] };
    key <Vol-> {         [ XF86AudioLowerVolume ] };
    key <Vol+> {         [ XF86AudioRaiseVolume ] };
//    key <POWR> {         [    XF86PowerOff ] };
//    key <KPEQ> {         [        KP_Equal ] };
//    key <I126> {         [       plusminus ] };
    key <Paus> {
        type= "PC_CONTROL_LEVEL2",
        symbols[Group1]= [           Pause,           Break ]
    };
//    key <I128> {         [     XF86LaunchA ] };
//    key <I129> {         [      KP_Decimal,      KP_Decimal ] };
//    key <HNGL> {         [          Hangul ] };
//    key <HJCV> {         [    Hangul_Hanja ] };
    key <Disp> {         [         Super_L ] };
    key <Win> {         [         Super_R ] };
//    key <COMP> {         [            Menu ] };
//    key <STOP> {         [          Cancel ] };
//    key <AGAI> {         [            Redo ] };
//    key <PROP> {         [        SunProps ] };
//    key <UNDO> {         [            Undo ] };
//    key <FRNT> {         [        SunFront ] };
//    key <COPY> {         [        XF86Copy ] };
//    key <OPEN> {         [        XF86Open ] };
//    key <PAST> {         [       XF86Paste ] };
//    key <FIND> {         [            Find ] };
//    key  <CUT> {         [         XF86Cut ] };
//    key <HELP> {         [            Help ] };
//    key <I147> {         [      XF86MenuKB ] };
//    key <I148> {         [  XF86Calculator ] };
    key <Slep> {         [       XF86Sleep ] };
//    key <I151> {         [      XF86WakeUp ] };
//    key <I152> {         [    XF86Explorer ] };
//    key <I153> {         [        XF86Send ] };
//    key <I155> {         [        XF86Xfer ] };
//    key <I156> {         [     XF86Launch1 ] };
//    key <I157> {         [     XF86Launch2 ] };
//    key <I158> {         [         XF86WWW ] };
//    key <I159> {         [         XF86DOS ] };
//    key <I160> {         [ XF86ScreenSaver ] };
//    key <I161> {         [ XF86RotateWindows ] };
//    key <I162> {         [    XF86TaskPane ] };
//    key <I163> {         [        XF86Mail ] };
//    key <I164> {         [   XF86Favorites ] };
//    key <I165> {         [  XF86MyComputer ] };
//    key <I166> {         [        XF86Back ] };
//    key <I167> {         [     XF86Forward ] };
//    key <I169> {         [       XF86Eject ] };
//    key <I170> {         [       XF86Eject,       XF86Eject ] };
//    key <I171> {         [   XF86AudioNext ] };
    key <Play> {         [   XF86AudioPlay,  XF86AudioPause ] };
//    key <I173> {         [   XF86AudioPrev ] };
//    key <I174> {         [   XF86AudioStop,       XF86Eject ] };
//    key <I175> {         [ XF86AudioRecord ] };
//    key <I176> {         [ XF86AudioRewind ] };
//    key <I177> {         [       XF86Phone ] };
//    key <I179> {         [       XF86Tools ] };
//    key <I180> {         [    XF86HomePage ] };
//    key <I181> {         [      XF86Reload ] };
//    key <I182> {         [       XF86Close ] };
//    key <I185> {         [    XF86ScrollUp ] };
//    key <I186> {         [  XF86ScrollDown ] };
//    key <I187> {         [       parenleft ] };
//    key <I188> {         [      parenright ] };
//    key <I189> {         [         XF86New ] };
//    key <I190> {         [            Redo ] };
//    key <FK13> {         [       XF86Tools ] };
//    key <FK14> {         [     XF86Launch5 ] };
//    key <FK15> {         [     XF86Launch6 ] };
//    key <FK16> {         [     XF86Launch7 ] };
//    key <FK17> {         [     XF86Launch8 ] };
//    key <FK18> {         [     XF86Launch9 ] };
//    key <FK20> {         [ XF86AudioMicMute ] };
//    key <FK21> {         [ XF86TouchpadToggle ] };
//    key <FK22> {         [  XF86TouchpadOn ] };
//    key <FK23> {         [ XF86TouchpadOff ] };
//    key <MDSW> {         [     Mode_switch ] };
//    key  <ALT> {         [        NoSymbol,           Alt_L ] };
//    key <META> {         [        NoSymbol,          Meta_L ] };
//    key <SUPR> {         [        NoSymbol,         Super_L ] };
//    key <HYPR> {         [        NoSymbol,         Hyper_L ] };
//    key <I208> {         [   XF86AudioPlay ] };
//    key <I209> {         [  XF86AudioPause ] };
//    key <I210> {         [     XF86Launch3 ] };
//    key <I211> {         [     XF86Launch4 ] };
//    key <I212> {         [     XF86LaunchB ] };
//    key <I213> {         [     XF86Suspend ] };
//    key <I214> {         [       XF86Close ] };
//    key <I215> {         [   XF86AudioPlay ] };
//    key <I216> {         [ XF86AudioForward ] };
//    key <I218> {         [           Print ] };
//    key <I220> {         [      XF86WebCam ] };
//    key <I223> {         [        XF86Mail ] };
//    key <I224> {         [   XF86Messenger ] };
//    key <I225> {         [      XF86Search ] };
//    key <I226> {         [          XF86Go ] };
//    key <I227> {         [     XF86Finance ] };
//    key <I228> {         [        XF86Game ] };
//    key <I229> {         [        XF86Shop ] };
//    key <I231> {         [          Cancel ] };
    key <Brt-> {         [ XF86MonBrightnessDown ] };
    key <Brt+> {         [ XF86MonBrightnessUp ] };
//    key <I234> {         [  XF86AudioMedia ] };
//    key <I235> {         [     XF86Display ] };
//    key <I236> {         [ XF86KbdLightOnOff ] };
//    key <I237> {         [ XF86KbdBrightnessDown ] };
//    key <I238> {         [ XF86KbdBrightnessUp ] };
//    key <I239> {         [        XF86Send ] };
//    key <I240> {         [       XF86Reply ] };
//    key <I241> {         [ XF86MailForward ] };
//    key <I242> {         [        XF86Save ] };
//    key <I243> {         [   XF86Documents ] };
//    key <I244> {         [     XF86Battery ] };
//    key <I245> {         [   XF86Bluetooth ] };
//    key <I246> {         [        XF86WLAN ] };
    modifier_map Control { <LCtl> };
    modifier_map Shift { <LSft> };
    modifier_map Shift { <RSft> };
    modifier_map Mod1 { <LAlt> };
    modifier_map Lock { <Caps> };
    modifier_map Mod2 { <NmLk> };
//    modifier_map Mod5 { <LVL3> };
    modifier_map Control { <RCtl> };
    modifier_map Mod1 { <RAlt> };
    modifier_map Mod4 { <Disp> };
    modifier_map Mod4 { <Win> };
//    modifier_map Mod5 { <MDSW> };
//    modifier_map Mod1 { <META> };
//    modifier_map Mod4 { <SUPR> };
//    modifier_map Mod4 { <HYPR> };
};
